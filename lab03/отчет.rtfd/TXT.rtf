{\rtf1\ansi\ansicpg1251\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Verdana-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red100\green100\blue133;\red255\green252\blue229;\red223\green7\blue0;
\red41\green66\blue119;\red0\green0\blue0;\red195\green116\blue28;}
{\*\expandedcolortbl;;\csgenericrgb\c39200\c39100\c52000;\csgenericrgb\c100000\c98800\c89800;\csgenericrgb\c87500\c2700\c0;
\csgenericrgb\c16100\c25900\c46700;\csgenericrgb\c0\c0\c0;\csgenericrgb\c76500\c45500\c11000;}
{\info
{\title \'cb\'e0\'e1\'ee\'f0\'e0\'f2\'ee\'f0\'ed\'e0\'ff \'f0\'e0\'e1\'ee\'f2\'e0 N2}
{\author rvp}
{\*\company \'c8\'d1\'cf \'d0\'c0\'cd}}\paperw11905\paperh16837\margl1152\margr1152\margb1134\margt1134\vieww12520\viewh15120\viewkind1
\deftab708
\pard\pardeftab708\ri-1\partightenfactor0

\f0\b\fs28 \cf0 						\
\uc0\u1056 \u1072 \u1089 \u1087 \u1077 \u1095 \u1072 \u1090 \u1082 \u1072  \u1092 \u1072 \u1081 \u1083 \u1072  even-odd.cpp\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f1\b0 \cf2 \cb3 #include \cf4 "mlisp.h"
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  even__bits(\cf5 double\cf6  n);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  odd__bits(\cf5 double\cf6  n);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  display__bin(\cf5 double\cf6  n);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  report__result(\cf5 double\cf6  n);
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  even__bits(\cf5 double\cf6  n) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  (n == \cf5 0\cf6  ? \cf5 1
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             : remainder(n,\cf5 2\cf6 ) == \cf5 0\cf6  ?
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                 even__bits(quotient(n,\cf5 2\cf6 ))
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             : odd__bits(quotient(n,\cf5 2\cf6 ))
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  odd__bits(\cf5 double\cf6  n) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3   \cf5 return\cf6  (n == \cf5 0\cf6  ? \cf5 0
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3        : remainder(n,\cf5 2\cf6 ) == \cf5 0\cf6  ?
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                 odd__bits (quotient(n,\cf5 2\cf6 ))
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3        : \cf5 true\cf6  ? even__bits(quotient(n,\cf5 2\cf6 ))
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3        : _infinity);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  display__bin(\cf5 double\cf6  n) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(remainder(n,\cf5 2\cf6 ));
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  (n == \cf5 0\cf6  ? \cf5 0\cf6  : display__bin(quotient(n,\cf5 2\cf6 )));
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  report__result(\cf5 double\cf6  n) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "Happy birthday to you!\\n\\t"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(n); display(\cf4 " (decimal)\\n\\t"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display__bin(n); display(\cf4 " (reversed bynary)\\n"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "\\teven?\\t"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     even__bits(n) == \cf5 1\cf6  ? display(\cf4 "yes"\cf6 ) : display(\cf4 "no"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "\\todd?\\t"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     odd__bits(n) == \cf5 1\cf6  ? display(\cf4 "yes"\cf6 ) : display(\cf4 "no"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  \cf5 0\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  dd = \cf5 02\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  mm = \cf5 07\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  yyyy = \cf5 2000\cf6 ;
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 int\cf6  main() \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     report__result(dd * \cf5 1000000\cf6  + mm * \cf5 10000\cf6  + yyyy);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  \cf5 0\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f0\b \cf0 \cb1 \
\pard\pardeftab708\ri-1\partightenfactor0
\cf0 \uc0\u1057 \u1082 \u1088 \u1080 \u1085 \u1096 \u1086 \u1090  \u1079 \u1072 \u1087 \u1091 \u1089 \u1082 \u1072  \u1085 \u1072  C++\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab708\pardirnatural\partightenfactor0

\f2\b0\fs24 \cf0 {{\NeXTGraphic –°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2019-03-02 –≤ 0.24.10.png \width10220 \height2540 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab708\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 							\
\pard\pardeftab708\ri-1\partightenfactor0
\cf0 \uc0\u1056 \u1072 \u1089 \u1087 \u1077 \u1095 \u1072 \u1090 \u1082 \u1072  \u1092 \u1072 \u1081 \u1083 \u1072  golden-section.cpp\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f1\b0 \cf2 \cb3 #include \cf4 "mlisp.h"
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  a = \cf5 7\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  b = \cf5 8\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  fun(\cf5 double\cf6  x);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  eps = \cf5 0.00001\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  golden__section__search(\cf5 double\cf6  a, \cf5 double\cf6  b);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  golden__start(\cf5 double\cf6  a, \cf5 double\cf6  b);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  mphi = \cf5 0\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  __nev__try(\cf5 double\cf6  a, \cf5 double\cf6  b, \cf5 double\cf6  xa, \cf5 double\cf6  ya, \cf5 double\cf6  xb, \cf5 double\cf6  yb);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  xmin = \cf5 0\cf6 ;
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  fun(\cf5 double\cf6  x) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     x = x - \cf5 double\cf6 (\cf5 104\cf6 ) / \cf5 105\cf6  / e;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  -sin(x) + expt(x - \cf5 7\cf6 , \cf5 4\cf6 ) + \cf5 0.3\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  golden__section__search(\cf5 double\cf6  a, \cf5 double\cf6  b) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \{ \cf7 \cb3 // let
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 double\cf6  xmin(a < b ? golden__start(a, b) : golden__start (b, a));
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  xmin;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \} 
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  golden__start(\cf5 double\cf6  a, \cf5 double\cf6  b) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     mphi = \cf5 0.5\cf6  * (\cf5 3\cf6  - sqrt(\cf5 5\cf6 ));
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \{  \cf7 \cb3 // let
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 double\cf6  xa = a + mphi * (b - a);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 double\cf6  xb = b - mphi * (b - a);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  __nev__try(a, b, xa, fun(xa), xb, fun(xb));
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \}
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  __nev__try(\cf5 double\cf6  a, \cf5 double\cf6  b, \cf5 double\cf6  xa, \cf5 double\cf6  ya, \cf5 double\cf6  xb, \cf5 double\cf6  yb) \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  (abs(a - b) < eps) ? ((a + b) * \cf5 0.5\cf6 ) :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     ((\cf5 true\cf6 ) ?   (display(\cf4 "+"\cf6 ),
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                     (ya < yb) ? (   b = xb, 
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     xb = xa, 
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     yb = ya, 
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     xa = a + mphi * (b - a), 
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     __nev__try(a, b, xa, fun(xa), xb, yb)
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                 ) :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                 (   a = xa,
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     xa = xb,
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     ya = yb,
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     xb = b - mphi * (b - a),
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                     __nev__try(a, b, xa, ya, xb, fun(xb))
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                                 )
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                 ) :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3         (_infinity)
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 int\cf6  main() \{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     xmin = golden__section__search(a, b);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "interval=\\t["\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(a);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 " , "\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(b);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "]\\n"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "xmin=\\t\\t"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(xmin); newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(\cf4 "f(xmin)=\\t"\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     display(fun(xmin)); newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  \cf5 0\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\pard\pardeftab708\ri-1\partightenfactor0

\f0\b \cf0 \cb1 \
\uc0\u1057 \u1082 \u1088 \u1080 \u1085 \u1096 \u1086 \u1090  \u1079 \u1072 \u1087 \u1091 \u1089 \u1082 \u1072  \u1085 \u1072  C++\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab708\pardirnatural\partightenfactor0

\f2\b0\fs24 \cf0 {{\NeXTGraphic Pasted Graphic 1.png \width8420 \height2140 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab708\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 \
\pard\pardeftab708\ri-1\partightenfactor0
\cf0 \uc0\u1056 \u1072 \u1089 \u1087 \u1077 \u1095 \u1072 \u1090 \u1082 \u1072  \u1092 \u1072 \u1081 \u1083 \u1072  coin19.cpp\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f1\b0 \cf2 \cb3 #include \cf4 "mlisp.h"
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  VARIANT=\cf5 4\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  LAST__DIGIT__OF__GROUP__NUMBER=\cf5 8\cf6 ; 
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  LARGEST__COIN=\cf5 50\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 bool\cf6  implication_Q(\cf5 bool\cf6  x_Q, \cf5 bool\cf6  y_Q);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  cc(\cf5 double\cf6  amount, \cf5 double\cf6  largest__coin);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  count__change(\cf5 double\cf6  amount);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  next__coin(\cf5 double\cf6  coin);
\f2 \cf0 \cb3 \

\f1 \cf5 \cb3 double\cf6  GR__AMOUNT();
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 bool\cf6  implication_Q(\cf5 bool\cf6  x_Q, \cf5 bool\cf6  y_Q)\{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3   \cf5 return\cf6  !(x_Q && !y_Q);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  cc(\cf5 double\cf6  amount, \cf5 double\cf6  largest__coin)\{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  \cf5 return
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  (  (amount == \cf5 0\cf6  || largest__coin == \cf5 1\cf6 ) ? \cf5 1
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3   : implication_Q(amount  >= \cf5 0\cf6 , largest__coin == \cf5 0\cf6 ) ? \cf5 0
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3   : (cc(amount, next__coin(largest__coin)) +
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3      cc(amount - largest__coin, largest__coin)
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     )
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  count__change(\cf5 double\cf6  amount)\{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  \cf5 return
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  cc(amount, LARGEST__COIN);
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  next__coin(\cf5 double\cf6  coin)\{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3     \cf5 return\cf6  (coin == \cf5 50\cf6  ?
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             \cf5 5\cf6 :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             coin == \cf5 5\cf6  ?
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             \cf5 3\cf6 :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             coin == \cf5 3\cf6  ?
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             \cf5 2\cf6 :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             coin == \cf5 2\cf6  ?
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             \cf5 1\cf6 :
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3             \cf5 0\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 double\cf6  GR__AMOUNT()\{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3   \cf5 return\cf6  remainder(\cf5 100\cf6  * LAST__DIGIT__OF__GROUP__NUMBER
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3                    + VARIANT,\cf5 137\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f2 \cf0 \cb3 \
\

\f1 \cf5 \cb3 int\cf6  main()\{
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(\cf4 " ZIS variant "\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(VARIANT);newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(\cf4 "1-2-3-5-50"\cf6 );newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(\cf4 "count__change for 100 \\t= "\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(count__change(\cf5 100\cf6 )); newline();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(\cf4 "count__change for "\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(GR__AMOUNT());
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(\cf4 " \\t= "\cf6 );
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  display(count__change(GR__AMOUNT())); newline();
\f2 \cf0 \cb3 \
\

\f1 \cf6 \cb3  std::cin.get();
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3  \cf5 return\cf6  \cf5 0\cf6 ;
\f2 \cf0 \cb3 \

\f1 \cf6 \cb3 \}
\f0\b \cf0 \cb1 \
\pard\pardeftab708\ri-1\partightenfactor0
\cf0 \uc0\u1056 \u1072 \u1089 \u1087 \u1077 \u1095 \u1072 \u1090 \u1082 \u1072  \u1092 \u1072 \u1081 \u1083 \u1072  coin19.ss\
(define VARIANT 4)\
(define LAST-DIGIT-OF-GROUP-NUMBER 8)\
(define LARGEST-COIN 50)\
(define (implication? x? y?)\
  (not (and\
        x?\
        (not y?)\
        )\
  )\
)\
;(implication? #f #f)\
(define (cc amount largest-coin)\
  (cond ((and ( = amount 0) ( = largest-coin 1))\
         1)\
        ((implication? (>= amount 0) (= largest-coin 0))\
         0)\
        ((+\
          (cc amount  (next-coin largest-coin))\
          (cc (- amount largest-coin) largest-coin)\
          ))\
  )\
)\
(define (count-change amount)\
  (cc amount LARGEST-COIN)\
)\
(define (next-coin coin)\
  (cond ((= coin 50) 5)\
        ((= coin 5) 3)\
        ((= coin 3) 2)\
        ((= coin 2) 1)\
        (else 0)\
  )\
)\
(define (GR-AMOUNT)\
  (remainder (+(* 100  LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 137)\
)\
(display " ZIS variant ")\
(display VARIANT)\
(newline)\
(display " 1-2-3-5-50")\
(newline)\
(display "count-change for 100 \\t= ")\
(display (count-change 100))\
(newline)\
(display "count-change for ")\
(display (GR-AMOUNT))\
(display " \\t= ")\
(display (count-change (GR-AMOUNT)))\
\
\uc0\u1057 \u1082 \u1088 \u1080 \u1085 \u1096 \u1086 \u1090  \u1079 \u1072 \u1087 \u1091 \u1089 \u1082 \u1072  \u1085 \u1072  C++\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b0\fs24 \cf0 {{\NeXTGraphic –°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2019-03-18 –≤ 0.47.45.png \width5560 \height1500 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¨}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 \
\pard\pardeftab708\ri-1\partightenfactor0
\cf0 \uc0\u1057 \u1082 \u1088 \u1080 \u1085 \u1096 \u1086 \u1090  \u1079 \u1072 \u1087 \u1091 \u1089 \u1082 \u1072  \u1085 \u1072  \u1051 \u1080 \u1089 \u1087 \u1077 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f2\b0\fs24 \cf0 {{\NeXTGraphic –°–Ω–∏–º–æ–∫ —ç–∫—Ä–∞–Ω–∞ 2019-03-18 –≤ 0.45.46.png \width4900 \height1360 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¨}
\f0\b\fs28 \
}